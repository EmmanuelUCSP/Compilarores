1. Program ::= DeclarationList

2. DeclarationList ::= Declaration DeclarationList
                   | ε

3. Declaration ::= FunctionDeclaration
                | VariableDeclaration

4. FunctionDeclaration ::= Type Identifier '(' Parameters ')' Block

5. VariableDeclaration ::= Type Identifier ';'

6. Type ::= 'integer'
        | 'boolean'
        | 'char'
        | 'string'
        | 'void'

7. Parameters ::= ParameterList
              | ε

8. ParameterList ::= Parameter (',' Parameter)*

9. Parameter ::= Type Identifier

10. Block ::= '{' StatementList '}'

11. StatementList ::= Statement StatementList
                  | ε

12. Statement ::= Block
              | ExpressionStatement
              | IfStatement
              | WhileStatement
              | ReturnStatement
              | PrintStatement

13. ExpressionStatement ::= Expression ';'
                        | ';'

14. IfStatement ::= 'if' '(' Expression ')' Statement ('else' Statement)?
                    
15. WhileStatement ::= 'while' '(' Expression ')' Statement

16. ReturnStatement ::= 'return' Expression ';'
                      | 'return' ';'

17. PrintStatement ::= 'print' '(' Expression ')' ';'

18. Expression ::= AssignmentExpression

19. AssignmentExpression ::= OrExpression '=' AssignmentExpression
                          | OrExpression

20. OrExpression ::= AndExpression ('||' AndExpression)*

21. AndExpression ::= EqualityExpression ('&&' EqualityExpression)*

22. EqualityExpression ::= RelationalExpression (('==' | '!=') RelationalExpression)*

23. RelationalExpression ::= AdditiveExpression (('<' | '>' | '<=' | '>=') AdditiveExpression)*

24. AdditiveExpression ::= MultiplicativeExpression (('+' | '-') MultiplicativeExpression)*

25. MultiplicativeExpression ::= PrimaryExpression (('*' | '/' | '%') PrimaryExpression)*

26. PrimaryExpression ::= Identifier
                      | Constant
                      | '(' Expression ')'

27. Constant ::= IntegerLiteral
            | BooleanLiteral
            | CharacterLiteral
            | StringLiteral
            | 'null'

28. Identifier ::= [a-zA-Z_][a-zA-Z0-9_]*

29. IntegerLiteral ::= [0-9]+

30. BooleanLiteral ::= 'true'
                   | 'false'

31. CharacterLiteral ::= '\'' [^'\n] '\''

32. StringLiteral ::= '"' [^"\n]* '"'
